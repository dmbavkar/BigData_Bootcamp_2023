# Numerical operation in python
# + addition
# - subtraction
# * multiplication
# / division
# // integer division
# ** power
# % modulus

x=5
y=5

print("Addition of x + y = ",x+y)
print("Subtraction of x - y = ",x-y)
print("Multiplication of x * y = ",x*y)
print("Float Division of x / y = ",x/y)
print("Integer Division of x // y = ",x//y)
print("Modulus of x % y = ",x%y)
print("Power of x ** y = ",x**y)

# Operations on string
str_data = "Dnyaneshwar"
empty_str = ''

#Concat operation for string
full_name = str_data + " " + "Bavkar"
print(full_name)

# if we can use - as well ? IT will not work
#minus_str = "Dnyaneshwar" - "Bavkar" 
#print("Minus str = ", minus_str)

# multiply_str = "Dnyaneshwar"*"Bavkar"
# print("Multiply str = ", multiply_str)

# power_str = "Dnyaneshwar"**"Bavkar"
# print("Power str = ", power_str)

# power_str = "Dnyaneshwar" ** 3
# print("Power str = ", power_str)

multiply_numeric_str = "Dnyaneshwar "*5
print("Multiply numeric str = ", multiply_numeric_str)

# Assignment operators
# = , x = 5
# += , x += 5 -> x = x+ 5
# -= , x -= 5 -> x = x-5
# *= , x *= 5 -> x =x * 5
# /=
# //=
# %=

# Comparison Operators
# ==, Equals to condition, x == y
# != , Not Equals to condition, x != y
# > , Greater than condition, x > y
# < , Less than, x < y
# <= , Less than or equal to, x <= y
# >= , Greater than or equal to, x >= y

a = 10
b = 5
print("Value of a = ", a)
print("Value of b = ", b)
print("Result of a == b ,", a == b)
print("Result of a != b ,", a != b)
print("Result of a <= b ,", a <= b)
print("Result of a >= b ,", a >= b)
print("Result of a < b ,", a < b)
print("Result of a > b ,", a > b)

# logical operators in Python ( Logical check will happen for expression result)
# and -> Returns true if both statements are true 
# or -> Returns true if one of statements are true
# not -> Reverse the result, returns false if the result is true

m = 10
n = 8
print("m>10 and n<10 Result " , m>10 and n<10) # False and True -> False
print("m>20 or n<10 Result " , m>10 or n<10) # False or True -> 
print("not(m>20 and n<10) Result " , not(m>10 and n<10)) 
# not(False and True) -> not(False) -> True

